version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gacp_backend_api
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./ai_models:/app/ai_models:ro
      - ./static:/app/static
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15-alpine
    container_name: gacp_postgres
    restart: always
    environment:
      POSTGRES_DB: gacp_db
      POSTGRES_USER: gacp_user
      POSTGRES_PASSWORD: gacp_pass
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gacp_user -d gacp_db"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: gacp_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25-alpine
    container_name: gacp_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
  redisdata: